{"version":3,"file":"main.df14163d6c402abab813.bundle.js","sources":["webpack:///./src/forms/button/Button.tsx"],"sourcesContent":["/**\n * Copyright (c) 2018 Dell Inc., or its subsidiaries. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport * as React from \"react\";\nimport {ReactNode} from \"react\";\nimport {classNames} from \"../../utils\";\nimport {Icon} from \"../../icon\";\n\nexport type ButtonProps = {\n    block?: boolean;\n    className?: string;\n    disabled?: boolean;\n    flat?: boolean;\n    inverse?: boolean;\n    link?: boolean;\n    onClick?: (evt: React.MouseEvent<HTMLElement>) => void;\n    onSubmit?: () => void;\n    primary?: boolean;\n    size?: ButtonSize;\n    state?: ButtonState;\n    submit?: boolean;\n    children?: ReactNode | ReactNode[];\n    icon?: string;\n};\n\nexport enum ButtonState {\n    INFO = \"info\",\n    SUCCESS = \"success\",\n    WARNING = \"warning\",\n    DANGER = \"danger\",\n}\n\nexport enum ButtonSize {\n    SMALL = \"sm\",\n}\n\n// TODO: add loading support\n\nexport class Button extends React.PureComponent<ButtonProps> {\n    private static getClassNames(props: ButtonProps): (string | undefined)[] {\n        return [\n            \"btn\",\n            props.icon ? \"btn-icon\" : undefined,\n            props.className,\n            ...[\"block\", \"flat\", \"inverse\", \"link\", \"primary\"].map(field => {\n                const value = (props as any)[field];\n                if (typeof value === \"boolean\" && value) return `btn-${field}`;\n                return undefined;\n            }),\n            ...[\"size\", \"state\"].map(field => {\n                const value = (props as any)[field];\n                if (typeof value !== \"undefined\" && value !== null) return `btn-${value}`;\n                return undefined;\n            }),\n        ];\n    }\n\n    render() {\n        const {disabled, children, onClick, onSubmit, submit, icon} = this.props;\n        return (\n            <button\n                disabled={disabled}\n                className={classNames(Button.getClassNames(this.props))}\n                onClick={onClick}\n                onSubmit={onSubmit}\n                type={submit ? \"submit\" : undefined}\n            >\n                {icon && <Icon shape={icon} />}\n                {children}\n            </button>\n        );\n    }\n}\n"],"mappings":"AAgCA","sourceRoot":""}